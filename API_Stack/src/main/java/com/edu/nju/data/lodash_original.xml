<!--> raw data from lodash doc <-->
<?xml version="1.0" encoding="UTF-8"?>
<methods>
    <parameters>
        <desc>array (Array): The array to process.</desc>
        <desc>[size=1] (number): The length of each chunk</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to compact.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to concatenate.</desc>
        <desc>[values] (...*): The values to concatenate.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[values] (...Array): The values to exclude.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[values] (...Array): The values to exclude.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[values] (...Array): The values to exclude.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[n=1] (number): The number of elements to drop.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[n=1] (number): The number of elements to drop.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to fill.</desc>
        <desc>value (*): The value to fill array with.</desc>
        <desc>[start=0] (number): The start position.</desc>
        <desc>[end=array.length] (number): The end position.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[fromIndex=0] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[fromIndex=array.length-1] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to flatten.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to flatten.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to flatten.</desc>
        <desc>[depth=1] (number): The maximum recursion depth.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>pairs (Array): The key-value pairs.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>value (*): The value to search for.</desc>
        <desc>[fromIndex=0] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to convert.</desc>
        <desc>[separator=','] (string): The element separator.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>value (*): The value to search for.</desc>
        <desc>[fromIndex=array.length-1] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[n=0] (number): The index of the element to return.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>[values] (...*): The values to remove.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>values (Array): The values to remove.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>values (Array): The values to remove.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>values (Array): The values to remove.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>[indexes] (...(number|number[])): The indexes of elements to remove.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to modify.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to slice.</desc>
        <desc>[start=0] (number): The start position.</desc>
        <desc>[end=array.length] (number): The end position.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The sorted array to inspect.</desc>
        <desc>value (*): The value to evaluate.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The sorted array to inspect.</desc>
        <desc>value (*): The value to evaluate.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>value (*): The value to search for.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The sorted array to inspect.</desc>
        <desc>value (*): The value to evaluate.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The sorted array to inspect.</desc>
        <desc>value (*): The value to evaluate.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>value (*): The value to search for.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[iteratee] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[n=1] (number): The number of elements to take.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[n=1] (number): The number of elements to take.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to query.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array of grouped elements to process.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array of grouped elements to process.</desc>
        <desc>[iteratee=_.identity] (Function): The function to combine regrouped values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to inspect.</desc>
        <desc>[values] (...*): The values to exclude.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to inspect.</desc>
        <desc>[comparator] (Function): The comparator invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to process.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[props=[]] (Array): The property identifiers.</desc>
        <desc>[values=[]] (Array): The property values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[props=[]] (Array): The property identifiers.</desc>
        <desc>[values=[]] (Array): The property values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[arrays] (...Array): The arrays to process.</desc>
        <desc>[iteratee=_.identity] (Function): The function to combine grouped values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee to transform keys.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[fromIndex=0] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[fromIndex=collection.length-1] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[depth=1] (number): The maximum recursion depth.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee to transform keys.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object|string): The collection to inspect.</desc>
        <desc>value (*): The value to search for.</desc>
        <desc>[fromIndex=0] (number): The index to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>path (Array|Function|string): The path of the method to invoke or the function invoked per iteration.</desc>
        <desc>[args] (...*): The arguments to invoke each method with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee to transform keys.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratees=[_.identity]] (Array[]|Function[]|Object[]|string[]): The iteratees to sort by.</desc>
        <desc>[orders] (string[]): The sort orders of iteratees.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[accumulator] (*): The initial value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[accumulator] (*): The initial value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to sample.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to sample.</desc>
        <desc>[n=1] (number): The number of elements to sample.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to shuffle.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object|string): The collection to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>collection (Array|Object): The collection to iterate over.</desc>
        <desc>[iteratees=[_.identity]] (...(Function|Function[])): The iteratees to sort by.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>n (number): The number of calls before func is invoked.</desc>
        <desc>func (Function): The function to restrict.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to cap arguments for.</desc>
        <desc>[n=func.length] (number): The arity cap.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>n (number): The number of calls at which func is no longer invoked.</desc>
        <desc>func (Function): The function to restrict.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to bind.</desc>
        <desc>thisArg (*): The this binding of func.</desc>
        <desc>[partials] (...*): The arguments to be partially applied.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to invoke the method on.</desc>
        <desc>key (string): The key of the method.</desc>
        <desc>[partials] (...*): The arguments to be partially applied.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to curry.</desc>
        <desc>[arity=func.length] (number): The arity of func.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to curry.</desc>
        <desc>[arity=func.length] (number): The arity of func.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to debounce.</desc>
        <desc>[wait=0] (number): The number of milliseconds to delay.</desc>
        <desc>[options={}] (Object): The options object.</desc>
        <desc>[options.leading=false] (boolean): Specify invoking on the leading edge of the timeout.</desc>
        <desc>[options.maxWait] (number): The maximum time func is allowed to be delayed before it's invoked.</desc>
        <desc>[options.trailing=true] (boolean): Specify invoking on the trailing edge of the timeout.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to defer.</desc>
        <desc>[args] (...*): The arguments to invoke func with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to delay.</desc>
        <desc>wait (number): The number of milliseconds to delay invocation.</desc>
        <desc>[args] (...*): The arguments to invoke func with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to flip arguments for.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to have its output memoized.</desc>
        <desc>[resolver] (Function): The function to resolve the cache key.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>predicate (Function): The predicate to negate.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to restrict.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to wrap.</desc>
        <desc>[transforms=[_.identity]] (...(Function|Function[])): The argument transforms.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to partially apply arguments to.</desc>
        <desc>[partials] (...*): The arguments to be partially applied.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to partially apply arguments to.</desc>
        <desc>[partials] (...*): The arguments to be partially applied.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to rearrange arguments for.</desc>
        <desc>indexes (...(number|number[])): The arranged argument indexes.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to apply a rest parameter to.</desc>
        <desc>[start=func.length-1] (number): The start position of the rest parameter.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to spread arguments over.</desc>
        <desc>[start=0] (number): The start position of the spread.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to throttle.</desc>
        <desc>[wait=0] (number): The number of milliseconds to throttle invocations to.</desc>
        <desc>[options={}] (Object): The options object.</desc>
        <desc>[options.leading=true] (boolean): Specify invoking on the leading edge of the timeout.</desc>
        <desc>[options.trailing=true] (boolean): Specify invoking on the trailing edge of the timeout.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to cap arguments for.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to wrap.</desc>
        <desc>[wrapper=identity] (Function): The wrapper function.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to clone.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to recursively clone.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to recursively clone.</desc>
        <desc>[customizer] (Function): The function to customize cloning.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to clone.</desc>
        <desc>[customizer] (Function): The function to customize cloning.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
        <desc>source (Object): The object of property predicates to conform to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
        <desc>[customizer] (Function): The function to customize comparisons.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
        <desc>source (Object): The object of property values to match.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
        <desc>source (Object): The object of property values to match.</desc>
        <desc>[customizer] (Function): The function to customize comparisons.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to compare.</desc>
        <desc>other (*): The other value to compare.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to process.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>augend (number): The first number in an addition.</desc>
        <desc>addend (number): The second number in an addition.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>number (number): The number to round up.</desc>
        <desc>[precision=0] (number): The precision to round up to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>dividend (number): The first number in a division.</desc>
        <desc>divisor (number): The second number in a division.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>number (number): The number to round down.</desc>
        <desc>[precision=0] (number): The precision to round down to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>multiplier (number): The first number in a multiplication.</desc>
        <desc>multiplicand (number): The second number in a multiplication.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>number (number): The number to round.</desc>
        <desc>[precision=0] (number): The precision to round to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>minuend (number): The first number in a subtraction.</desc>
        <desc>subtrahend (number): The second number in a subtraction.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>array (Array): The array to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>number (number): The number to clamp.</desc>
        <desc>[lower] (number): The lower bound.</desc>
        <desc>upper (number): The upper bound.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>number (number): The number to check.</desc>
        <desc>[start=0] (number): The start of the range.</desc>
        <desc>end (number): The end of the range.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[lower=0] (number): The lower bound.</desc>
        <desc>[upper=1] (number): The upper bound.</desc>
        <desc>[floating] (boolean): Specify returning a floating-point number.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>[sources] (...Object): The source objects.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>[sources] (...Object): The source objects.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>sources (...Object): The source objects.</desc>
        <desc>[customizer] (Function): The function to customize assigned values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>sources (...Object): The source objects.</desc>
        <desc>[customizer] (Function): The function to customize assigned values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[paths] (...(string|string[])): The property paths to pick.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>prototype (Object): The object to inherit from.</desc>
        <desc>[properties] (Object): The properties to assign to the object.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>[sources] (...Object): The source objects.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>[sources] (...Object): The source objects.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to inspect.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>path (Array|string): The path of the property to get.</desc>
        <desc>[defaultValue] (*): The value returned for undefined resolved values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>path (Array|string): The path to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>path (Array|string): The path to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to invert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to invert.</desc>
        <desc>[iteratee=_.identity] (Function): The iteratee invoked per element.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>path (Array|string): The path of the method to invoke.</desc>
        <desc>[args] (...*): The arguments to invoke the method with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>[sources] (...Object): The source objects.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The destination object.</desc>
        <desc>sources (...Object): The source objects.</desc>
        <desc>customizer (Function): The function to customize assigned values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The source object.</desc>
        <desc>[paths] (...(string|string[])): The property paths to omit.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The source object.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per property.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The source object.</desc>
        <desc>[paths] (...(string|string[])): The property paths to pick.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The source object.</desc>
        <desc>[predicate=_.identity] (Function): The function invoked per property.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>path (Array|string): The path of the property to resolve.</desc>
        <desc>[defaultValue] (*): The value returned for undefined resolved values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to modify.</desc>
        <desc>path (Array|string): The path of the property to set.</desc>
        <desc>value (*): The value to set.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to modify.</desc>
        <desc>path (Array|string): The path of the property to set.</desc>
        <desc>value (*): The value to set.</desc>
        <desc>[customizer] (Function): The function to customize assigned values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to iterate over.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
        <desc>[accumulator] (*): The custom accumulator value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to modify.</desc>
        <desc>path (Array|string): The path of the property to unset.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to modify.</desc>
        <desc>path (Array|string): The path of the property to set.</desc>
        <desc>updater (Function): The function to produce the updated value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to modify.</desc>
        <desc>path (Array|string): The path of the property to set.</desc>
        <desc>updater (Function): The function to produce the updated value.</desc>
        <desc>[customizer] (Function): The function to customize assigned values.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to wrap in a lodash instance.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to wrap.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to provide to interceptor.</desc>
        <desc>interceptor (Function): The function to invoke.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to provide to interceptor.</desc>
        <desc>interceptor (Function): The function to invoke.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[paths] (...(string|string[])): The property paths to pick.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to plant.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to capitalize.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to deburr.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to inspect.</desc>
        <desc>[target] (string): The string to search for.</desc>
        <desc>[position=string.length] (number): The position to search up to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to escape.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to escape.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to pad.</desc>
        <desc>[length=0] (number): The padding length.</desc>
        <desc>[chars=' '] (string): The string used as padding.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to pad.</desc>
        <desc>[length=0] (number): The padding length.</desc>
        <desc>[chars=' '] (string): The string used as padding.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to pad.</desc>
        <desc>[length=0] (number): The padding length.</desc>
        <desc>[chars=' '] (string): The string used as padding.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>string (string): The string to convert.</desc>
        <desc>[radix=10] (number): The radix to interpret value by.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to repeat.</desc>
        <desc>[n=1] (number): The number of times to repeat the string.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to modify.</desc>
        <desc>pattern (RegExp|string): The pattern to replace.</desc>
        <desc>replacement (Function|string): The match replacement.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to split.</desc>
        <desc>separator (RegExp|string): The separator pattern to split by.</desc>
        <desc>[limit] (number): The length to truncate results to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to inspect.</desc>
        <desc>[target] (string): The string to search for.</desc>
        <desc>[position=0] (number): The position to search from.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The template string.</desc>
        <desc>[options={}] (Object): The options object.</desc>
        <desc>[options.escape=_.templateSettings.escape] (RegExp): The HTML &quot;escape&quot; delimiter.</desc>
        <desc>[options.evaluate=_.templateSettings.evaluate] (RegExp): The &quot;evaluate&quot; delimiter.</desc>
        <desc>[options.imports=_.templateSettings.imports] (Object): An object to import into the template as free variables.</desc>
        <desc>[options.interpolate=_.templateSettings.interpolate] (RegExp): The &quot;interpolate&quot; delimiter.</desc>
        <desc>[options.sourceURL='lodash.templateSources[n]'] (string): The sourceURL of the compiled template.</desc>
        <desc>[options.variable='obj'] (string): The data object variable name.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to trim.</desc>
        <desc>[chars=whitespace] (string): The characters to trim.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to trim.</desc>
        <desc>[chars=whitespace] (string): The characters to trim.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to trim.</desc>
        <desc>[chars=whitespace] (string): The characters to trim.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to truncate.</desc>
        <desc>[options={}] (Object): The options object.</desc>
        <desc>[options.length=30] (number): The maximum string length.</desc>
        <desc>[options.omission='...'] (string): The string to indicate text is omitted.</desc>
        <desc>[options.separator] (RegExp|string): The separator pattern to truncate to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to unescape.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[string=''] (string): The string to inspect.</desc>
        <desc>[pattern] (RegExp|string): The pattern to match words.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>func (Function): The function to attempt.</desc>
        <desc>[args] (...*): The arguments to invoke func with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to bind and assign the bound methods to.</desc>
        <desc>methodNames (...(string|string[])): The object method names to bind.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>pairs (Array): The predicate-function pairs.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>source (Object): The object of property predicates to conform to.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to return from the new function.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to check.</desc>
        <desc>defaultValue (*): The default value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[funcs] (...(Function|Function[])): The functions to invoke.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[funcs] (...(Function|Function[])): The functions to invoke.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): Any value.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[func=_.identity] (*): The value to convert to a callback.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>source (Object): The object of property values to match.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>path (Array|string): The path of the property to get.</desc>
        <desc>srcValue (*): The value to match.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>path (Array|string): The path of the method to invoke.</desc>
        <desc>[args] (...*): The arguments to invoke the method with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
        <desc>[args] (...*): The arguments to invoke the method with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[object=lodash] (Function|Object): The destination object.</desc>
        <desc>source (Object): The object of functions to add.</desc>
        <desc>[options={}] (Object): The options object.</desc>
        <desc>[options.chain=true] (boolean): Specify whether mixins are chainable.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[n=0] (number): The index of the argument to return.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[iteratees=[_.identity]] (...(Function|Function[])): The iteratees to invoke.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[predicates=[_.identity]] (...(Function|Function[])): The predicates to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[predicates=[_.identity]] (...(Function|Function[])): The predicates to check.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>path (Array|string): The path of the property to get.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>object (Object): The object to query.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[start=0] (number): The start of the range.</desc>
        <desc>end (number): The end of the range.</desc>
        <desc>[step=1] (number): The value to increment or decrement by.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[start=0] (number): The start of the range.</desc>
        <desc>end (number): The end of the range.</desc>
        <desc>[step=1] (number): The value to increment or decrement by.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[context=root] (Object): The context object.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>n (number): The number of times to invoke iteratee.</desc>
        <desc>[iteratee=_.identity] (Function): The function invoked per iteration.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>value (*): The value to convert.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <parameters>
        <desc>[prefix=''] (string): The value to prefix the ID with.</desc>
    </parameters>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
    <signature>_.forOwn(object, [iteratee=_.identity])</signature>
    <desc>Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property. The iteratee is invoked with three arguments: (value, key, object). Iteratee functions may exit iteration early by explicitly returning false.</desc>
    <returns>
        <type>(Array)</type>
        <desc>(Array): Returns the new array of chunks.</desc>
    </returns>
</methods>